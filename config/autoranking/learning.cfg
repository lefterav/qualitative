[DEFAULT]

repetitions = 1
iterations = 4
experiment = "grid"

path = /local/tmp/elav01/selection-mechanism/autoranking/learning 

class_name = "rank"
langpair = "de-en"

meta_attributes = "testset,judgement_id,langsrc,langtgt,ps1_judgement_id,ps2_judgement_id,id,tgt-1_score,tgt-1_system,tgt-2_score,tgt-2_system,document_id,judge_id,segment_id"
hidden_attributes = "tgt-1_berkeley-tree,tgt-2_berkeley-tree,src_berkeley-tree,rank_diff,tgt-1_ref-lev,tgt-1_ref-meteor_score,tgt-1_ref-meteor_fragPenalty,tgt-1_ref-meteor_recall,tgt-1_ref-meteor_precision,tgt-1_ref-bleu,tgt-2_ref-lev,tgt-2_ref-meteor_score,tgt-2_ref-meteor_fragPenalty,tgt-2_ref-meteor_recall,tgt-2_ref-meteor_precision,tgt-2_ref-bleu,tgt-1_rank,tgt-2_rank"
discrete_attributes = "src_reuse_status,src_terminologyAdmitted_status,src_total_status,src_spelling_status,src_style_status,src_grammar_status,src_terminology_status,src_resultStats_projectStatus,tgt-1_reuse_status,tgt-1_terminologyAdmitted_status,tgt-1_total_status,tgt-1_spelling_status,tgt-1_style_status,tgt-1_grammar_status,tgt-1_terminology_status,tgt-1_resultStats_projectStatus,tgt-2_reuse_status,tgt-2_terminologyAdmitted_status,tgt-2_total_status,tgt-2_spelling_status,tgt-2_style_status,tgt-2_grammar_status,tgt-2_terminology_status,tgt-2_resultStats_projectStatus" 

training_path = "/local/tmp/elav01/selection-mechanism/autoranking/annotation/annotated_de-en/9"
training_sets = "wmt2012-newstest-{langpair}-rank.all.analyzed.f.jcml,wmt2010-{langpair}-jcml-rank.all.analyzed.f.jcml,wmt2011-combo-{langpair}-jcml-rank.all.analyzed.f.jcml,wmt2011-newstest-{langpair}-jcml-rank.all.analyzed.f.jcml,wmt2009-{langpair}-jcml-rank.all.analyzed.f.jcml"

test = "list"
#test = "crossvalidation"
test_path = "/local/tmp/elav01/selection-mechanism/autoranking/annotation/annotated_de-en/9"
test_sets = "wmt2009-{langpair}-jcml-rank.all.analyzed.f.jcml"

tempdir = "/local/tmp/elav01/tmp"
#tempdir = "/home/dupo/taraxu_data/qualitative/tmp"

params_LogRegLearner = "{'stepwise_lr':True, 'remove_singular':True}"
params_SVMEasyLearner = "{'verbose':True, 'replace_infinite':True, 'default_value':0}"

#succesful features from our WMT11 metric with no ratios + pseudoMETEOR
attset_24_source = "lm_unk,l_tokens,berkeley-n,parse-VP,berkley-loglikelihood"
attset_24_target = "cross-meteor_score,lm_unk,l_tokens,berkeley-n,parse-VP,berkley-loglikelihood"
attset_24_general = None

#quest baseline+ours
attset_33_source = "parse-comma,parse-dot,lm_unk,l_tokens,berkeley-n,parse-VP,berkley-loglikelihood"
attset_33_target = "q_1001_1,q_1002_1,q_1006_1,q_1009_1,q_1012_1,q_1015_1,q_1022_1,q_1036_1,q_1049_1,q_1050_1,q_1053_1,q_1054_1,q_1057_1,q_1058_1,parse-comma,parse-dot,cross-meteor_score,lm_unk,l_tokens,berkeley-n,parse-VP,berkley-loglikelihood"
attset_33_general = None


[dev]
#succesful features from our WMT11 metric with no ratios + pseudoMETEOR
attset_00_source = "l_tokens"
attset_00_target = "cross-meteor_score,l_tokens"
attset_00_general = None
remove_infinite = False
att = ["attset_00"]
learner = ["LogRegLearner"]
#"LogRegLearner", "kNNLearner", "TreeLearner", "C45Learner", "SVMEasyLearner"]

[coling2012]
attset_24_source = "lm_unk,l_tokens,berkeley-n,parse-VP,berkley-loglikelihood"
attset_24_target = "cross-meteor_score,lm_unk,l_tokens,berkeley-n,parse-VP,berkley-loglikelihood"
attset_24_general = None

att = ["attset_24"]
learner = ["LogRegLearner","SVMEasyLearner","LibLinearLogRegLearner"]
bidirectional_pairs = False

[wmt13]
att = ["attset_33"]
learner = ["LogRegLearner"]

bidirectional_pairs = False


[2008-2014]
repetitions = 10
training_path = "/local/tmp/elav01/selection-mechanism/autoranking/annotation/annotated_de-en/joined"
training_sets = "wmt2008-2014-{langpair}-jcml-rank.all.analyzed.f.jcml"
att = ["attset_24"]
#, "attset_33"]
learner = ["LogRegLearner"] 
#,"SVC"]
bidirectional_pairs = Falseselection
test = "crossvalidation"

optimize = True
optimization_params = {'kernel': ['linear', 'rbf'], 'C': [1, 10, 2],  'gamma': [0.0001, 0.01, 2], 'cv':5, 'n_jobs': 1, 'verbose': True}
scorers = "f1"


[scikit-dev]
path = /home/elav01/taraxu_data/qualitative
repetitions = 2
iterations = 2

attset_00_source = "l_tokens"
attset_00_target = "cross-meteor_score,l_tokens"
attset_00_general = None
att = ["attset_00"]

training_path = "/home/elav01/taraxu_data/qualitative"
training_sets = "wmt2008-de-en-jcml-rank.all.analyzed.f.jcml"

test = "crossvalidation"

#Feature selection settings (optional)
feature_selector = "RandomizedLasso"            
#feature_selection_params = "{}"
feature_selection_threshold = 0.25
# [0.05, 0.10, 0.25, 0.30, 0.50, 0.75]

#Learner optimization (optional, needed for SVM)
optimize = True
optimization_params = "{'kernel': ['linear', 'rbf'], 'C': [1, 10, 2],  'gamma': [0.0001, 0.01, 2], 'cv':5, 'n_jobs': 1, 'verbose': True}"
scorers = 'f1_score'

learner = "SVC"

[scikit-dev-lns87247]
repetitions = 1 
iterations = 4 

attset_00_source = "l_tokens"
attset_00_target = "cross-meteor_score,l_tokens"
attset_00_general = None
att = ["attset_24"]

training_sets = "wmt2014-de-en-jcml-rank.all.analyzed.f.jcml"
test_sets = "wmt2014-de-en-jcml-rank.all.analyzed.f.jcml"
#test = "crossvalidation"
test = "list"
#Feature selection settings (optional)
#feature_selector = "RandomizedLasso"            
feature_selector = None
#feature_selection_params = "{}"
feature_selection_threshold = 0.25
# [0.05, 0.10, 0.25, 0.30, 0.50, 0.75]

#Learner optimization (optional, needed for SVM)
optimize = True
optimization_params = {'kernel': ['linear', 'rbf'], 'C': [1, 10, 2],  'gamma': [0.0001, 0.01, 2], 'cv':5, 'n_jobs': 1, 'verbose': True}
scorers = "f1"

learner = "SVC"

[scikit-dev-sammy]
repetitions = 1 
iterations = 4

attset_00_source = "l_tokens"
attset_00_target = "cross-meteor_score,l_tokens"
attset_00_general = None
att = ["attset_24"]

path = /data/research_data/qualitative
tempdir = /data/research_data/qualitative/tmp
training_path = "/data/research_data/qualitative"
test_path = "/data/research_data/qualitative"

training_sets = "wmt2008-de-en-jcml-rank.all.analyzed.f.jcml"
test_sets = "wmt2008-de-en-jcml-rank.all.analyzed.f.jcml"
#test = "crossvalidation"
test = "list"
#Feature selection settings (optional)
#feature_selector = "RandomizedLasso"            
feature_selector = None
#feature_selection_params = "{}"
feature_selection_threshold = 0.25
# [0.05, 0.10, 0.25, 0.30, 0.50, 0.75]

#Learner optimization (optional, needed for SVM)
optimize = True
optimization_params = {'kernel': ['linear', 'rbf'], 'C': [1, 10, 2],  'gamma': [0.0001, 0.01, 2], 'cv':5, 'n_jobs': 1, 'verbose': True}
scorers = "f1"

#learner = "SVC"
learner = ["LogRegLearner"]

